---
- name: Create Kubernetes Cluster in AWS
  hosts: localhost
  gather_facts: false

  vars:
    aws_access_key: YOUR_AWS_ACCESS_KEY_HERE
    aws_secret_key: YOUR_AWS_SECRET_KEY_HERE
    region: YOUR_AWS_REGION_HERE
    instance_type: t2.micro
    ami_id: ami-0c55b159cbfafe1f0
    key_name: YOUR_AWS_KEY_PAIR_NAME_HERE
    security_group_id: YOUR_AWS_SECURITY_GROUP_ID_HERE
    subnet_id: YOUR_AWS_SUBNET_ID_HERE

  tasks:

  - name: Create EC2 Instance for Master
    ec2:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ region }}"
      instance_type: "{{ instance_type }}"
      image: "{{ ami_id }}"
      key_name: "{{ key_name }}"
      security_group_id: "{{ security_group_id }}"
      subnet_id: "{{ subnet_id }}"
      count: 1
      wait: yes
      assign_public_ip: yes
      instance_tags:
        Name: k8s-master
      vpc_subnet_id: "{{ subnet_id }}"
    register: ec2_master

  - name: Create EC2 Instances for Workers
    ec2:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ region }}"
      instance_type: "{{ instance_type }}"
      image: "{{ ami_id }}"
      key_name: "{{ key_name }}"
      security_group_id: "{{ security_group_id }}"
      subnet_id: "{{ subnet_id }}"
      count: 2
      wait: yes
      assign_public_ip: yes
      instance_tags:
        Name: k8s-worker
      vpc_subnet_id: "{{ subnet_id }}"
    register: ec2_workers

  - name: Wait for SSH to come up on the new instances
    wait_for:
      host: "{{ item.public_ip }}"
      port: 22
      delay: 10
      timeout: 320
    with_items: "{{ ec2_master.instances + ec2_workers.instances }}"

  - name: Update apt cache
    apt:
      update_cache: yes
    become: true

  - name: Install Docker
    apt:
      name: docker.io
      state: present
    become: true

  - name: Add current user to the docker group
    user:
      name: "{{ ansible_user }}"
      groups: docker
      append: yes
    become: true

  - name: Download and Install kubeadm, kubectl and kubelet
    command: "{{ item }}"
    with_items:
      - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      - sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
      - sudo apt-get update
      - sudo apt-get install -y kubelet kubeadm kubectl
    become: true

  - name: Initialize the Kubernetes Master
    command: kubeadm init --apiserver-advertise-address={{ hostvars['localhost']['ec2_master'].public_ip }} --pod-network-cidr=10.244.0.0/16
    args:
      creates: /etc/kubernetes/admin.conf
    become: true

  - name: Copy Kubernetes config to user's home directory
    copy:
      src: /etc/kubernetes/admin.conf
      dest: "{{ lookup('env', 'HOME') }}
