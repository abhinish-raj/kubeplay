---
- name: Create Kubernetes Cluster in AWS
  hosts: localhost
  collections:
    - amazon.aws
  gather_facts: false

  vars:
    aws_access_key: AKIAWYSZYRUKKACBUFE5
    aws_secret_key: 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
    region: us-east-1
    instance_type: t2.micro
    ami_id: ami-09cd747c78a9add63
    key_name: test
    security_group_id: sg-071b6775483c01a94
    subnet_id: subnet-0aa9f9adb5e795cc7

  tasks:
  - name: Create EC2 Instance for Master
    amazon.aws.ec2_instance:
      name: "k8s-master"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      key_name: "{{ key_name }}"
      region: "{{ region }}"
      vpc_subnet_id: "{{ subnet_id }}"
      instance_type: "{{ instance_type }}"
      security_group: "{{ security_group_id }}"
      count: 1
      network:
        assign_public_ip: true
      image_id: "{{ ami_id }}"
      tags:
        Environment: Testing
    register: ec2_master

  - name: Create EC2 Instances for Workers
    amazon.aws.ec2_instance:
      name: "k8s-worker"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      key_name: "{{ key_name }}"
      region: "{{ region }}"
      vpc_subnet_id: "{{ subnet_id }}"
      instance_type: "{{ instance_type }}"
      security_group: "{{ security_group_id }}"
      count: 2
      network:
        assign_public_ip: true
      image_id: "{{ ami_id }}"
      tags:
        Environment: Testing
    register: ec2_workers

  - name: print ip
    debug:
      var : "{{ item.public_ip_address }}"
    with_items: "{{ ec2_master.instances + ec2_workers.instances }}"
    
  - name: Wait for SSH to come up on the new instances
    wait_for:
      host: "{{ item.public_ip_address }}"
      port: 22
      delay: 10
      timeout: 320
    with_items: "{{ ec2_master.instances + ec2_workers.instances }}"

  - name: Update apt cache
    apt:
      update_cache: yes
    become: true

  # - name: Install Docker
  #   apt:
  #     name: docker.io
  #     state: present
  #   become: true

  # - name: Add current user to the docker group
  #   user:
  #     name: "{{ ansible_user }}"
  #     groups: docker
  #     append: yes
  #   become: true

  # - name: Download and Install kubeadm, kubectl and kubelet
  #   command: "{{ item }}"
  #   with_items:
  #     - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
  #     - sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
  #     - sudo apt-get update
  #     - sudo apt-get install -y kubelet kubeadm kubectl
  #   become: true

  # - name: Initialize the Kubernetes Master
  #   command: kubeadm init --apiserver-advertise-address={{ hostvars['localhost']['ec2_master'].public_ip }} --pod-network-cidr=10.244.0.0/16
  #   args:
  #     creates: /etc/kubernetes/admin.conf
  #   become: true

  # - name: Copy Kubernetes config to user's home directory
  #   copy:
  #     src: /etc/kubernetes/admin.conf
  #     dest: "{{ lookup('env', 'HOME') }}
