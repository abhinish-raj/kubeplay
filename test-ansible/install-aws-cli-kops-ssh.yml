---
- name: Install AWS CLI, kops and create SSH key if not present
  hosts: localhost
  gather_facts: true
  vars:
    ansible_become_pass: abhi
    aws_access_key: "AKIAY66FAADMGVCMWXFL"
    aws_secret_key: "MIO9N407TOTi98hthK7zb4hVDaJi0LdNUWSLsTjB"
    ssh_key_path: "{{ ansible_env.HOME }}/.ssh/id_rsa"
    kops_version: "1.23.1"
    kops_state_store: "s3://your-kops-state-store"
    kops_cluster_name: "mycluster.testmyzone.com"
    kops_aws_region: "us-west-2"
  vars_prompt:
    - name: "ansible_sudo_pass"
      prompt: "Enter sudo password"
      private: yes
  tasks:
    - name: Check if AWS CLI is installed
      stat:
        path: /usr/local/bin/aws
      register: aws_cli_check

    - name: Install AWS CLI if not present
      command: "/usr/bin/curl 'https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip' -o 'awscliv2.zip' && /usr/bin/unzip awscliv2.zip && sudo ./aws/install"
      args:
        creates: /usr/local/bin/aws
      when: aws_cli_check.stat.exists == False

    - name: Check if kops is installed
      stat:
        path: /usr/local/bin/kops
      register: kops_check

    - name: Install kops if not present
      command: "/usr/bin/curl -LO 'https://github.com/kubernetes/kops/releases/download/{{ kops_version }}/kops-darwin-amd64' && chmod +x kops-darwin-amd64 && sudo mv kops-darwin-amd64 /usr/local/bin/kops"
      args:
        creates: /usr/local/bin/kops
      when: kops_check.stat.exists == False

    - name: Configure AWS credentials
      become: yes
      become_user: abhi
      lineinfile:
        path: "{{ ansible_env.HOME }}/.aws/credentials"
        line: |
          [default]
          aws_access_key_id={{ aws_access_key }}
          aws_secret_access_key={{ aws_secret_key }}

    - name: Create SSH key if not present
      command: "ssh-keygen -t rsa -N '' -f {{ ssh_key_path }}"
      args:
        creates: "{{ ssh_key_path }}"

    - name: Check if S3 bucket exists
      aws_s3_bucket_facts:
        bucket: "{{ s3_bucket_name }}"
      register: s3_bucket

    - name: Create S3 bucket if it doesn't exist
      when: not s3_bucket.buckets
      command: "aws s3api create-bucket --bucket {{ s3_bucket_name }} --create-bucket-configuration LocationConstraint={{ ansible_facts['ec2']['placement']['region'] }}"

    - name: Create Kubernetes Cluster using Kops
      become: yes
      become_user: abhi
      command: "kops create cluster --name {{ kops_cluster_name }} --state {{ kops_state_store }} --zones {{ kops_aws_region }}a,{{ kops_aws_region }}b --node-count 2 --node-size t2.micro --master-size t2.micro --dns-zone {{ kops_cluster_name }} --yes"

    - name: Remove AWS Access and Secret Keys
      command: aws configure unset aws_access_key_id && aws configure unset aws_secret_access_key
      become: true
      always_run: true
